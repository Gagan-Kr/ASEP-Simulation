% % Lattice Config
% 
% LattS = [ 1 50 50 ];   %     for 2D simulation [ 1 Column Row ]             %*
% 
% Latt = false(LattS);
% FlowProfile = zeros(LattS);
% J = false(cat(2,LattS,6));
% FlowTimeCount = 0;
% 
% % Injection & Ejection window
% 
% [IL3, IL1, EL3, EL1] = deal( 18:33 , 1 , [] , [] );                         %*
% [IR3, IR1, ER3, ER1] = deal( [] , [] , 1:LattS(3) , 1 );                    %*
% 
% % Simukation Settngs
% 
% [ Alfa , Beta ] = deal( 0.5 , 0.5 );                                        %*
% 
% [ XBias , YBias]  = deal( 0.2 , 0 );                                        %*
% 
% Simulation = true; Speed = 1000;                                          %*
% Time = 400;                                                                 %*
% TotEns = 30000;    % No. of ensembles
% 
% [p, q] = deal( 1/4+(XBias/4) , 1/4-(XBias/4) );
% [r, s] = deal( 1/4+(YBias/4) , 1/4-(YBias/4) );
% 
% % Run Simulation
% 
% tic
% for NoEns = 1:TotEns
% 
% Latt = false(LattS);
% J = false(cat(2,LattS,6));
% FlowTimeCount = 0;
% 
% for t = 1:Time
% 
%     Injection & Ejection
% 
%     Latt(IR1,end,IR3) = Latt(IR1,end,IR3) | rand(length(IR1),1,length(IR3)) < Alfa;
%     Latt(IL1,1,IL3) = Latt(IL1,1,IL3) | rand(length(IL1),1,length(IL3)) < Alfa;
% 
%     Latt(ER1,end,ER3) = Latt(ER1,end,ER3) & rand(length(ER1),1,length(ER3)) > Beta;
%     Latt(EL1,1,EL3) = Latt(EL1,1,EL3) & rand(length(EL1),1,length(EL3)) > Beta;
% 
%     Asymetric Exclusion Process
% 
%     R = rand(LattS);
%     R(Latt == false) = nan;
%     M = randperm(4);
% 
%     for i = 1:4
% 
%         if M(i) == 1   % Right hop
%             J(:,1:end-1,:,1) = R(:,1:end-1,:)<p & ~Latt(:,2:end,:);
%             Latt(circshift(J(:,:,:,1),1,2)) = true;
%         end
% 
%         if M(i) == 2   % Left hop
%             J(:,2:end,:,2) = R(:,2:end,:)>=p & R(:,2:end,:)<p+q & ~Latt(:,1:end-1,:);
%             Latt(circshift(J(:,:,:,2),-1,2)) = true;
%         end
%  
%         if M(i) == 3   % Up hop
%             J(:,:,1:end-1,3) = (R(:,:,1:end-1)>=p+q & ~Latt(:,:,2:end) & R(:,:,1:end-1)<p+q+r);
%             Latt(circshift(J(:,:,:,3),1,3)) = true;
%         end
% 
%         if M(i) == 4   % Down hop
%             J(:,:,2:end,4) = R(:,:,2:end)>=p+q+r & ~Latt(:,:,1:end-1) & R(:,:,2:end)<p+q+r+s;
%             Latt(circshift(J(:,:,:,4),-1,3)) = true;
%         end
%     end
% 
%     Latt(J(:,:,:,1)|J(:,:,:,2)|J(:,:,:,3)|J(:,:,:,4)) = false;
% 
%     Simulaton
% 
%     if Simulation && floor(t/Speed) == t/Speed
%         spy(rot90(squeeze(Latt),1)); grid on;
%         drawnow;
%     end
% 
%     Ensembles
% end
% FlowProfile = FlowProfile + Latt;
% 
%     if floor((NoEns/TotEns)*100) == (NoEns/TotEns)*100 
%         clc; fprintf('Simulating... (%d%%)\n',(NoEns/TotEns)*100);
%     end
% 
% end
% 
% end
% toc
% f2 = figure(1);
% FlowProfileH = heatmap(rot90(squeeze(FlowProfile/NoEns),1),"Colormap",jet);
% [XLabels,YLabels] = deal(string(1:LattS(2)),string(1:LattS(3)));
% XLabels(mod(1:LattS(2),10) ~= 0) = " ";
% YLabels(mod(1:LattS(3),10) ~= 0) = " ";
% XLabels(1) = "1"; YLabels(1) = "1";
% set(FlowProfileH,"XDisplayLabels",XLabels,"YDisplayLabels",YLabels)
% grid off; caxis([0,1]);


% MaxThickness = 1000;
% 
% figure(1); clf;
% for MaxDep = 0.1:0.1:1
%     for Thickness = 0:MaxThickness
%         DepRate = MaxDep * ((MaxThickness - Thickness)/MaxThickness);
%         N(Thickness+1) = sum(DepRate > rand(100000,1))/100000;
%     end
%     plot(0:MaxThickness,N); hold on;
% end
% 
% figure(2); clf;
% for MaxDep = 0.1:0.1:1
%     Thickness = 0;
%     tMax = 10000;
%     Deposition = zeros(1,tMax);
%     for t = 1:tMax
%         DepRate = MaxDep * ((MaxThickness - Thickness)/MaxThickness);
%         if rand < DepRate
%             Thickness = Thickness + 1;
%         end
%         Deposition(t) = Thickness;
%     end
%     plot(1:tMax, Deposition); hold on;
% end



% function createfigure(X1, Y1)
% %CREATEFIGURE(X1, Y1)
% %  X1:  vector of plot x data
% %  Y1:  vector of plot y data
% 
% %  Auto-generated by MATLAB on 30-Dec-2022 01:06:33
% 
% % Create figure
% figure('Color',[1 1 1]);
% 
% % Create axes
% axes1 = axes('Position',[0.13 0.149078726968174 0.775 0.775921273031827]);
% hold(axes1,'on');
% 
% % Create plot
% plot(X1,Y1,'LineWidth',3);
% 
% % Create ylabel
% ylabel('$\rho_i$','FontWeight','bold','FontSize',24,'Interpreter','latex');
% 
% % Create xlabel
% xlabel('Position ($i$)','FontWeight','bold','FontSize',22,...
%     'Interpreter','latex');

% % Uncomment the following line to preserve the X-limits of the axes
% % xlim(axes1,[0.5 100]);
% % Uncomment the following line to preserve the Y-limits of the axes
% % ylim(axes1,[0 1]);
% box(axes1,'on');
% grid(axes1,'on');
% hold(axes1,'off');
% % Set the remaining axes properties
% set(axes1,'FontSize',14,'FontWeight','bold');
% end

% % % Data = rot90(squeeze(FlowProfile1400/NoEns),1);
% % % XData = sum(Data(25:26,:))/2;
% % % 
% % % YData = Data(:,1);
% % % 
% % % figure (1)
% % % plot(1:length(XData),XData); grid on, hold on
% % % 
% % % figure(2);
% % % plot(1:25,YData(26:50)); grid on; hold on;

% figure(4)
% plot(1:1400,AlfaRate1'); hold on
% plot(1:1400,BetaRate1'); grid on

f2 = figure(6); hold off;
FlowProfileH = heatmap(SubstrateEnsD1(:,21:80),"Colormap",turbo);
[XLabels,YLabels] = deal(string(1:60),string(1:100));
XLabels(mod(1:60,10) ~= 0) = " ";
YLabels(mod(1:100,10) ~= 0) = " ";
XLabels(1) = "1"; YLabels(1) = "1";
YLabels = flip(YLabels);
set(FlowProfileH,"XDisplayLabels",XLabels,"YDisplayLabels",YLabels)
grid off;
caxis([0,100]);

% set(FlowProfileH,'ColorData',SubstrateEnsRB4(:,21:80));
% 
% drawnow;

% figure(4); hold on

% % Data = SubstrateEnsD2;
% % % Data2 = sum(SubstrateEnsRB1/10,"all");
% % % Data3 = sum(SubstrateEnsRB2/10,"all");
% % % Data4 = sum(SubstrateEnsRB3/10,"all");
% % % Data5 = sum(SubstrateEnsRB4/10,"all");
% % % Data6 = sum(SubstrateEnsRB5/10,"all");
% % % Data7 = sum(SubstrateEnsRB6/10,"all");
% % % Data8 = sum(SubstrateEnsRB6/10,"all");
% % Substrate2dH = sum(Data((LattS(3)/2)-1:LattS(3)/2+2,:),1)/4;
% % [ ~ , Ind] = max(Substrate2dH);
% % if Ind < 22
% % Ind = 22;
% % Substrate2dV = sum(Data(:,Ind-1:Ind+1),2)/3;
% % else
% % Substrate2dV = sum(Data(:,Ind-1:Ind+1),2)/3;
% % end
% % % set(SubstrateHPlot,'YData',Substrate2dH);
% % % set(SubstrateLPlot,'YData',Substrate2dV);
% % figure(1); hold on;
% % plot(1:59,Substrate2dH(21:79)); 
% % 
% % figure(2); hold on;
% % plot(1:50,Substrate2dV(51:100));
% % 
% % drawnow;

% plot([0.05 0.1 0.2 0.3 0.4 0.5 0.6 0.7],[Data1,Data2,Data3,Data4,Data5,Data6,Data7,Data8]);


% [XLabels,YLabels] = deal(string(1:50),string(1:50));
% XLabels(mod(1:50,10) ~= 0) = " ";
% YLabels(mod(1:50,10) ~= 0) = " ";
% XLabels(1) = "1"; YLabels(1) = "1";
% set(FlowProfileH,"XDisplayLabels",XLabels,"YDisplayLabels",YLabels)
% grid off;
% caxis([0,1]);


% %% Lattice Config
% 
% LattS = [ 1 50 50 ];   %     for 2D simulation [ 1 Column Row ]            %*
% 
% Latt = false(LattS);
% FlowProfile = zeros(LattS);
% J = false(cat(2,LattS,6));
% FlowTimeCount = 0;
% k = 0; NoEns = 0; t = 0;
% 
% %% Injection & Ejection window
% 
% [IL3, IL1, EL3, EL1] = deal( 18:33 , 1 , [] , [] );                         %*
% [IR3, IR1, ER3, ER1] = deal( [] , [] , 1:LattS(3) , 1 );                    %*
% 
% %% Simukation Settngs
% 
% [ Alfa , Beta ] = deal( 0.5 , 0.5 );                                            %*
% 
% [ XBias , YBias]  = deal( 0.05 , 0 );                                        %*
% 
% Simulation = true; Speed = 1000;                                            %*
% Time = 10000;                                                               %*
% TotEns = 50000;    % No. of ensembles
% 
% [p, q] = deal( 1/4+(XBias/4) , 1/4-(XBias/4) );
% [r, s] = deal( 1/4+(YBias/4) , 1/4-(YBias/4) );
% 
% %% Run Simulation
% 
% k = 0; NoEns = 0; t = 0;
% FlowProfile = zeros(LattS);
% 
% tic
% 
% % for t = 1:Time
%  while NoEns <= TotEns
%     t = t + 1;
%     % Injection & Ejection
% 
%     Latt(IR1,end,IR3) = Latt(IR1,end,IR3) | rand(length(IR1),1,length(IR3)) < Alfa;
%     Latt(IL1,1,IL3) = Latt(IL1,1,IL3) | rand(length(IL1),1,length(IL3)) < Alfa;
% 
%     Latt(ER1,end,ER3) = Latt(ER1,end,ER3) & rand(length(ER1),1,length(ER3)) > Beta;
%     Latt(EL1,1,EL3) = Latt(EL1,1,EL3) & rand(length(EL1),1,length(EL3)) > Beta;
% 
%     % Asymetric Exclusion Process
% 
%     R = rand(LattS);
%     R(Latt == false) = nan;
%     M = randperm(4);
% 
%     for i = 1:4
% 
%         if M(i) == 1   % Right hop
%             J(:,1:end-1,:,1) = R(:,1:end-1,:)<p & ~Latt(:,2:end,:);
%             Latt(circshift(J(:,:,:,1),1,2)) = true;
%         end
% 
%         if M(i) == 2   % Left hop
%             J(:,2:end,:,2) = R(:,2:end,:)>=p & R(:,2:end,:)<p+q & ~Latt(:,1:end-1,:);
%             Latt(circshift(J(:,:,:,2),-1,2)) = true;
%         end
%  
%         if M(i) == 3   % Up hop
%             J(:,:,1:end-1,3) = (R(:,:,1:end-1)>=p+q & ~Latt(:,:,2:end) & R(:,:,1:end-1)<p+q+r);
%             Latt(circshift(J(:,:,:,3),1,3)) = true;
%         end
% 
%         if M(i) == 4   % Down hop
%             J(:,:,2:end,4) = R(:,:,2:end)>=p+q+r & ~Latt(:,:,1:end-1) & R(:,:,2:end)<p+q+r+s;
%             Latt(circshift(J(:,:,:,4),-1,3)) = true;
%         end
%     end
% 
%     Latt(J(:,:,:,1)|J(:,:,:,2)|J(:,:,:,3)|J(:,:,:,4)) = false;
% 
%     % Simulaton
% 
% %     if Simulation && floor(t/Speed) == t/Speed
% %         spy(rot90(squeeze(Latt),1)); grid on;
% %         drawnow;
% %     end
% 
%     % Ensembles
% 
%     k = k + 1;
%     if k == 50
%         FlowProfile = FlowProfile + Latt;
%         NoEns = NoEns + 1;
%         k = 0;
%     end
% 
%     if floor((NoEns/TotEns)*100) == (NoEns/TotEns)*100 
%         clc; fprintf('Simulating... (%d%%)\n',(NoEns/TotEns)*100);
%     end
% end
% 
% %end
% toc
% f2 = figure(1);
% FlowProfileH = heatmap(rot90(squeeze(FlowProfile/NoEns),1),"Colormap",jet);
% [XLabels,YLabels] = deal(string(1:LattS(2)),string(1:LattS(3)));
% XLabels(mod(1:LattS(2),10) ~= 0) = " ";
% YLabels(mod(1:LattS(3),10) ~= 0) = " ";
% XLabels(1) = "1"; YLabels(1) = "1";
% set(FlowProfileH,"XDisplayLabels",XLabels,"YDisplayLabels",YLabels)
% grid off; caxis([0,1]);

% ax = findobj(0, 'type', 'axes', '-or', 'type', 'matlab.graphics.axis.Axes');
% if isempty(ax); error('No axes found'); end
% if length(ax) > 1; error('Multiple axes found'); end

% xticks(ax(1),0:5:50);
% Label = string(50:5:100);
% set(ax(1), 'XTickLabel', Label);

